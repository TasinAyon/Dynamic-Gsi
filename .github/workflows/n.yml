# This is a basic workflow tto help you get started with Actions

name: SGSI_Build

on:
   pull_request:
   push:
     branches:
       - master
    
env:              
  ROM_URL: 'https://lavender.automation9914.workers.dev/protonaosp.zip'
  ZIP_NAME: 'update.zip'
  OS_TYPE: 'Generic'
  BUILD_TYPE: 'ab'
  REPACK_NAME: 'protonaospjune.zip'
  VERSION: '12'
  upload_action-gh-release: 'true'
  SETUP: 'true'
  
jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
       - name: Checkout
         uses: actions/checkout@main
       
       - name: Clean Up
         run: |       
           docker rmi `docker images -q`
           sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d
           sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php*
           sudo -E apt-get update
           sudo -E apt-get -y autoremove --purge
           sudo -E apt-get clean
           df -h
           
       - name: Setting up the SPICES
         run: |
            sudo chmod 777 /var/cache/debconf/
            sudo chmod 777 /var/cache/debconf/passwords.dat
            echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections
            sudo apt-get -y -q update
            #sudo apt-get -y -q install bc bison build-essential curl flex g++-multilib gcc-multilib git gnupg gperf imagemagick lib32ncurses5-dev lib32z1-dev liblz4-tool libncurses5-dev libsdl1.2-dev libwxgtk3.0-gtk3-dev libxml2 libxml2-utils lunzip lzop pngcrush schedtool squashfs-tools xsltproc zip zlib1g-dev openjdk-8-jdk python perl git git-lfs libncurses5 xmlstarlet virtualenv xz-utils rr jq
            #sudo fallocate -l 16G /swapfile
            #mkdir -p /tmp/rom
            #cd /tmp/rom
            sudo -E apt-get -qq install git openjdk-8-jdk wget
            git config --global user.email tasinayon9@gmail.com
            git config --global user.name TasinAyon
            git config --global color.ui false
            sudo -E apt install unace unrar zip unzip p7zip-full p7zip-rar sharutils rar uudeview mpack arj cabextract rename
            sudo -E apt install liblzma-dev python3-pip brotli lz4
            pip3 install --upgrade pip
            pip3 install twrpdtgen
            pip3 install backports.lzma protobuf pycrypto twrpdtgen extract-dtb
            git clone --recurse-submodules https://github.com/AndroidDumps/Firmware_extractor.git
            cd Firmware_extractor
            wget https://dl.google.com/developers/android/sc/images/factory/redfin-spb3.210618.016-factory-f4abfb53.zip
            ./extractor.sh redfin-spb3.210618.016-factory-f4abfb53.zip
            sudo chmod -R 777 /home/runner/work/Dynamic-Gsi/Dynamic-Gsi/Firmware_extractor/out
            zip -r /home/runner/work/Dynamic-Gsi/Dynamic-Gsi/Firmware_extractor/out/system.7z /home/runner/work/Dynamic-Gsi/Dynamic-Gsi/Firmware_extractor/out/system.img
            #zip -r /home/runner/work/Dynamic-Gsi/Dynamic-Gsi/Firmware_extractor/out/system_ext.7z /home/runner/work/Dynamic-Gsi/Dynamic-Gsi/Firmware_extractor/out/system_ext.img
            #zip -r /home/runner/work/Dynamic-Gsi/Dynamic-Gsi/Firmware_extractor/out/odm.7z /home/runner/work/Dynamic-Gsi/Dynamic-Gsi/Firmware_extractor/out/odm.img
            #zip -r /home/runner/work/Dynamic-Gsi/Dynamic-Gsi/Firmware_extractor/out/product.7z /home/runner/work/Dynamic-Gsi/Dynamic-Gsi/Firmware_extractor/out/product.img
            #zip -r /home/runner/work/Dynamic-Gsi/Dynamic-Gsi/Firmware_extractor/out/vendor.7z /home/runner/work/Dynamic-Gsi/Dynamic-Gsi/Firmware_extractor/out/vendor.img
            #export CCACHE_DIR=/tmp/ccache
            #export CCACHE_EXEC=$(which ccache)
            #export USE_CCACHE=1
            #export SDCLANG_PATH=vendor/qcom/proprietary/llvm-arm-toolchain-ship/8.0/bin
            #ccache -M 20G
            #ccache -o compression=true
            #ccache -z
      


       - name: Upload SGSI to action-gh-release...
         uses: ncipollo/release-action@v1.8.6
         with:
           artifacts: /home/runner/work/Dynamic-Gsi/Dynamic-Gsi/Firmware_extractor/out/system.7z
           name: xiaoxinSGSI-${{ env.OS_TYPE }}-${{ env.BUILD_TYPE }}-Android${{ env.VERSION }}-unpack
           tag: xiaoxinSGSI-${{ env.OS_TYPE }}-${{ env.BUILD_TYPE }}-Android${{ env.VERSION }}-${{ github.run_number }}
           body: Use actions auto bulid by Xiaoxindada
           token: ${{ secrets.GITHUB_TOKEN }}
